from sys import argv
from pathlib import Path
import re

nixpkgs = argv[1]
source = Path(nixpkgs, 'doc/stdenv/stdenv.chapter.md').read_text()

result = {}
for attr, doc in re.findall(r"#+ `([\w\d'_]+)` {#var-stdenv-.*?}(.*?)##", source, re.DOTALL):
    result[attr] = doc.strip()
for attr1, attr2, doc in re.findall(r"#+ `([\w\d'_]+)` / `([\w\d'_]+)` {#var-stdenv-.*?}(.*?)##", source, re.DOTALL):
    result[attr1] = doc.strip()
    result[attr2] = doc.strip()
for phase, doc in re.findall(r"{#(?:ssec-)?(\w+)-phase}(.*?)####", source, re.DOTALL):
    # TODO: unpack phase says "It supports the following files by default:" then stops
    if phase == 'distribution':
        phase = 'dist'
    result[phase + 'Phase'] = doc.strip()


print("""
// generated by %s

const Schema schemaMkDerivation = std::vector<NACompletionItem>{
""".strip() % __file__)

for attr, doc in result.items():
    print('{"%s", R"doc(%s)doc"},' % (attr, doc.strip()))
print("""
};
""")